{"ast":null,"code":"// import { createSlice } from \"@reduxjs/toolkit\";\n\n// const favoritesSlice = createSlice({\n//   name: \"favorites\",\n//   initialState: {\n//     items: [],\n//   },\n//   reducers: {\n//     addToFavorites: (state, action) => {\n//       state.items.push(action.payload);\n//     },\n//     removeFromFavorites: (state, action) => {\n//       const productId = action.payload;\n//       state.items = state.items.filter((product) => product.id !== productId);\n//     },\n//   },\n// });\n\n// export const { addToFavorites, removeFromFavorites } = favoritesSlice.actions;\n// export default favoritesSlice.reducer;\n\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport toast from \"react-hot-toast\";\nconst initialState = {\n  favoritesItems: [],\n  favoritesTotalQuantity: 0,\n  favoritesTotalAmount: 0\n};\nexport const favoritesSlice = createSlice({\n  name: \"favorites\",\n  initialState,\n  reducers: {\n    addToFavorites(state, action) {\n      const itemIndex = state.favoritesItems.findIndex(item => item.id === action.payload.id);\n      if (itemIndex !== -1) {\n        state.favoritesItems[itemIndex].favoritesQuantity += 1;\n        toast.info(\"Increased product quantity\", {\n          position: \"bottom-left\"\n        });\n      } else {\n        const newItem = {\n          ...action.payload,\n          favoritesQuantity: 1\n        };\n        state.favoritesItems.push(newItem);\n        toast.success(\"Product added to favorites\", {\n          position: \"bottom-left\"\n        });\n      }\n      localStorage.setItem(\"favoritesItems\", JSON.stringify(state.favoritesItems));\n    },\n    decreaseFavorites(state, action) {\n      const itemIndex = state.favoritesItems.findIndex(item => item.id === action.payload.id);\n      if (state.favoritesItems[itemIndex].favoritesQuantity > 1) {\n        state.favoritesItems[itemIndex].favoritesQuantity -= 1;\n        toast.info(\"Decreased product quantity\", {\n          position: \"bottom-left\"\n        });\n      } else if (state.favoritesItems[itemIndex].favoritesQuantity === 1) {\n        const nextFavoritesItems = state.favoritesItems.filter(item => item.id !== action.payload.id);\n        state.favoritesItems = nextFavoritesItems;\n        toast.error(\"Product removed from favorites\", {\n          position: \"bottom-left\"\n        });\n      }\n      localStorage.setItem(\"favoritesItems\", JSON.stringify(state.favoritesItems));\n    },\n    clearFavorites(state) {\n      state.favoritesItems = [];\n      localStorage.removeItem(\"favoritesItems\");\n      toast.error(\"Cleared favorites\", {\n        position: \"bottom-left\"\n      });\n    }\n  }\n});\nexport const {\n  addToFavorites,\n  decreaseFavorites,\n  clearFavorites\n} = favoritesSlice.actions;\nexport const selectFavoritesItems = state => state.favorites.favoritesItems;\nexport const selectFavoritesTotalQuantity = state => state.favorites.favoritesItems.reduce((total, item) => total + item.favoritesQuantity, 0);\nexport const selectFavoritesTotalAmount = state => state.favorites.favoritesItems.reduce((total, item) => total + item.price * item.favoritesQuantity, 0);\nexport default favoritesSlice.reducer;","map":{"version":3,"names":["createSlice","toast","initialState","favoritesItems","favoritesTotalQuantity","favoritesTotalAmount","favoritesSlice","name","reducers","addToFavorites","state","action","itemIndex","findIndex","item","id","payload","favoritesQuantity","info","position","newItem","push","success","localStorage","setItem","JSON","stringify","decreaseFavorites","nextFavoritesItems","filter","error","clearFavorites","removeItem","actions","selectFavoritesItems","favorites","selectFavoritesTotalQuantity","reduce","total","selectFavoritesTotalAmount","price","reducer"],"sources":["/Users/mbp15inch/Desktop/complete-shopping-cart-main/front/src/slices/favoritesSlice.js"],"sourcesContent":["// import { createSlice } from \"@reduxjs/toolkit\";\n\n// const favoritesSlice = createSlice({\n//   name: \"favorites\",\n//   initialState: {\n//     items: [],\n//   },\n//   reducers: {\n//     addToFavorites: (state, action) => {\n//       state.items.push(action.payload);\n//     },\n//     removeFromFavorites: (state, action) => {\n//       const productId = action.payload;\n//       state.items = state.items.filter((product) => product.id !== productId);\n//     },\n//   },\n// });\n\n// export const { addToFavorites, removeFromFavorites } = favoritesSlice.actions;\n// export default favoritesSlice.reducer;\n\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport toast from \"react-hot-toast\";\nconst initialState = {\n  favoritesItems: [],\n  favoritesTotalQuantity: 0,\n  favoritesTotalAmount: 0,\n};\nexport const favoritesSlice = createSlice({\n  name: \"favorites\",\n  initialState,\n  reducers: {\n    addToFavorites(state, action) {\n      const itemIndex = state.favoritesItems.findIndex(\n        (item) => item.id === action.payload.id\n      );\n      if (itemIndex !== -1) {\n        state.favoritesItems[itemIndex].favoritesQuantity += 1;\n        toast.info(\"Increased product quantity\", {\n          position: \"bottom-left\",\n        });\n      } else {\n        const newItem = {\n          ...action.payload,\n          favoritesQuantity: 1,\n        };\n        state.favoritesItems.push(newItem);\n        toast.success(\"Product added to favorites\", {\n          position: \"bottom-left\",\n        });\n      }\n      localStorage.setItem(\n        \"favoritesItems\",\n        JSON.stringify(state.favoritesItems)\n      );\n    },\n    decreaseFavorites(state, action) {\n      const itemIndex = state.favoritesItems.findIndex(\n        (item) => item.id === action.payload.id\n      );\n      if (state.favoritesItems[itemIndex].favoritesQuantity > 1) {\n        state.favoritesItems[itemIndex].favoritesQuantity -= 1;\n        toast.info(\"Decreased product quantity\", {\n          position: \"bottom-left\",\n        });\n      } else if (state.favoritesItems[itemIndex].favoritesQuantity === 1) {\n        const nextFavoritesItems = state.favoritesItems.filter(\n          (item) => item.id !== action.payload.id\n        );\n        state.favoritesItems = nextFavoritesItems;\n        toast.error(\"Product removed from favorites\", {\n          position: \"bottom-left\",\n        });\n      }\n      localStorage.setItem(\n        \"favoritesItems\",\n        JSON.stringify(state.favoritesItems)\n      );\n    },\n    clearFavorites(state) {\n      state.favoritesItems = [];\n      localStorage.removeItem(\"favoritesItems\");\n      toast.error(\"Cleared favorites\", {\n        position: \"bottom-left\",\n      });\n    },\n  },\n});\n\nexport const { addToFavorites, decreaseFavorites, clearFavorites } = favoritesSlice.actions;\n\nexport const selectFavoritesItems = (state) => state.favorites.favoritesItems;\nexport const selectFavoritesTotalQuantity = (state) =>\n  state.favorites.favoritesItems.reduce(\n    (total, item) => total + item.favoritesQuantity,\n    0\n  );\nexport const selectFavoritesTotalAmount = (state) =>\n  state.favorites.favoritesItems.reduce(\n    (total, item) => total + item.price * item.favoritesQuantity,\n    0\n  );\n\nexport default favoritesSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}