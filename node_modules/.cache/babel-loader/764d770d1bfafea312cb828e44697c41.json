{"ast":null,"code":"// import { createSlice, combineReducers } from \"@reduxjs/toolkit\";\n// import { toast } from \"react-toastify\";\n// import \"react-toastify/dist/ReactToastify.css\";\n\n// const favoritesSlice = createSlice({\n//   name: \"favorites\",\n//   initialState: {\n//     items: [],\n//   },\n//   reducers: {\n//     addToFavorites(state, action) {\n//       const tempProductItem = { ...action.payload, cartQuantity: 1 };\n//       state.items.push(tempProductItem);\n//       toast.success(\"Product added to favorites\", {\n//         position: \"bottom-left\",\n//       });\n//       localStorage.setItem(\"favorites\", JSON.stringify(state.items));\n//     },\n//     decreaseFavorites(state, action) {\n//       const itemIndex = state.items.findIndex(\n//         (item) => item.id === action.payload.id\n//       );\n//       if (state.items[itemIndex].cartQuantity > 1) {\n//         state.items[itemIndex].cartQuantity -= 1;\n//         toast.info(\"Decreased product quantity\", {\n//           position: \"bottom-left\",\n//         });\n//       } else if (state.items[itemIndex].cartQuantity === 1) {\n//         state.items = state.items.filter(\n//           (item) => item.id !== action.payload.id\n//         );\n//         toast.error(\"Product removed from favorites\", {\n//           position: \"bottom-left\",\n//         });\n//       }\n//       localStorage.setItem(\"favorites\", JSON.stringify(state.items));\n//     },\n//     removeFromFavorites(state, action) {\n//       state.items = state.items.filter(\n//         (item) => item.id !== action.payload.id\n//       );\n//       toast.error(\"Product removed from favorites\", {\n//         position: \"bottom-left\",\n//       });\n//       localStorage.setItem(\"favorites\", JSON.stringify(state.items));\n//     },\n//   },\n// });\n\n// export const { addToFavorites, decreaseFavorites, removeFromFavorites } =\n//   favoritesSlice.actions;\n\n// const rootReducer = combineReducers({\n//   favorites: favoritesSlice.reducer,\n// });\n\n// export default rootReducer;\n\n//updated\n\n// favoritesSlice.js\n\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst favoritesSlice = createSlice({\n  name: \"favorites\",\n  initialState: {\n    items: [] // Initialize favorites array\n  },\n\n  reducers: {\n    addToFavorites: (state, action) => {\n      const product = action.payload;\n      state.items.push(product);\n    },\n    removeFromFavorites: (state, action) => {\n      const productId = action.payload;\n      state.items = state.items.filter(product => product.id !== productId);\n    }\n  }\n});\nexport const {\n  addToFavorites,\n  removeFromFavorites\n} = favoritesSlice.actions;\nexport default favoritesSlice.reducer;","map":{"version":3,"names":["createSlice","favoritesSlice","name","initialState","items","reducers","addToFavorites","state","action","product","payload","push","removeFromFavorites","productId","filter","id","actions","reducer"],"sources":["/Users/nurlanaaliyeva/Downloads/complete-shopping-cart-main/front/src/slices/favoritesSlice.js"],"sourcesContent":["// import { createSlice, combineReducers } from \"@reduxjs/toolkit\";\n// import { toast } from \"react-toastify\";\n// import \"react-toastify/dist/ReactToastify.css\";\n\n// const favoritesSlice = createSlice({\n//   name: \"favorites\",\n//   initialState: {\n//     items: [],\n//   },\n//   reducers: {\n//     addToFavorites(state, action) {\n//       const tempProductItem = { ...action.payload, cartQuantity: 1 };\n//       state.items.push(tempProductItem);\n//       toast.success(\"Product added to favorites\", {\n//         position: \"bottom-left\",\n//       });\n//       localStorage.setItem(\"favorites\", JSON.stringify(state.items));\n//     },\n//     decreaseFavorites(state, action) {\n//       const itemIndex = state.items.findIndex(\n//         (item) => item.id === action.payload.id\n//       );\n//       if (state.items[itemIndex].cartQuantity > 1) {\n//         state.items[itemIndex].cartQuantity -= 1;\n//         toast.info(\"Decreased product quantity\", {\n//           position: \"bottom-left\",\n//         });\n//       } else if (state.items[itemIndex].cartQuantity === 1) {\n//         state.items = state.items.filter(\n//           (item) => item.id !== action.payload.id\n//         );\n//         toast.error(\"Product removed from favorites\", {\n//           position: \"bottom-left\",\n//         });\n//       }\n//       localStorage.setItem(\"favorites\", JSON.stringify(state.items));\n//     },\n//     removeFromFavorites(state, action) {\n//       state.items = state.items.filter(\n//         (item) => item.id !== action.payload.id\n//       );\n//       toast.error(\"Product removed from favorites\", {\n//         position: \"bottom-left\",\n//       });\n//       localStorage.setItem(\"favorites\", JSON.stringify(state.items));\n//     },\n//   },\n// });\n\n// export const { addToFavorites, decreaseFavorites, removeFromFavorites } =\n//   favoritesSlice.actions;\n\n// const rootReducer = combineReducers({\n//   favorites: favoritesSlice.reducer,\n// });\n\n// export default rootReducer;\n\n\n//updated\n\n// favoritesSlice.js\n\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst favoritesSlice = createSlice({\n  name: \"favorites\",\n  initialState: {\n    items: [], // Initialize favorites array\n  },\n  reducers: {\n    addToFavorites: (state, action) => {\n      const product = action.payload;\n      state.items.push(product);\n    },\n    removeFromFavorites: (state, action) => {\n      const productId = action.payload;\n      state.items = state.items.filter((product) => product.id !== productId);\n    },\n  },\n});\n\nexport const { addToFavorites, removeFromFavorites } = favoritesSlice.actions;\nexport default favoritesSlice.reducer;\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAGA;;AAEA;;AAEA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,cAAc,GAAGD,WAAW,CAAC;EACjCE,IAAI,EAAE,WAAW;EACjBC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE,CAAE;EACb,CAAC;;EACDC,QAAQ,EAAE;IACRC,cAAc,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACjC,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAO;MAC9BH,KAAK,CAACH,KAAK,CAACO,IAAI,CAACF,OAAO,CAAC;IAC3B,CAAC;IACDG,mBAAmB,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MACtC,MAAMK,SAAS,GAAGL,MAAM,CAACE,OAAO;MAChCH,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACH,KAAK,CAACU,MAAM,CAAEL,OAAO,IAAKA,OAAO,CAACM,EAAE,KAAKF,SAAS,CAAC;IACzE;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEP,cAAc;EAAEM;AAAoB,CAAC,GAAGX,cAAc,CAACe,OAAO;AAC7E,eAAef,cAAc,CAACgB,OAAO"},"metadata":{},"sourceType":"module"}