{"ast":null,"code":"var _jsxFileName = \"/Users/mbp15inch/Downloads/complete-shopping-cart-main/front/src/components/Cart.jsx\";\n// import React, { Component } from \"react\";\n// import { connect } from \"react-redux\";\n// import {\n//   addToCart,\n//   clearCart,\n//   decreaseCart,\n//   getTotals,\n//   removeFromCart,\n// } from \"../slices/cartSlice\";\n// import { Link } from \"react-router-dom\";\n// class Cart extends Component {\n//   componentDidMount() {\n//     this.props.dispatch(getTotals());\n//   }\n//   handleAddToCart = (product) => {\n//     this.props.dispatch(addToCart(product));\n//   };\n//   handleDecreaseCart = (product) => {\n//     this.props.dispatch(decreaseCart(product));\n//   };\n//   handleRemoveFromCart = (product) => {\n//     this.props.dispatch(removeFromCart(product));\n//   };\n//   handleClearCart = () => {\n//     this.props.dispatch(clearCart());\n//   };\n//   render() {\n//     const { cart } = this.props;\n//     // return (\n//     //   <div className=\"cart-container\">\n//     //     <h2>Shopping Cart</h2>\n//     //     {cart.cartItems.length === 0 ? (\n//     //       <div className=\"cart-empty\">\n//     //         <p>Your cart is currently empty</p>\n//     //         <div className=\"start-shopping\">\n//     //           <Link to=\"/\">\n//     //             <svg\n//     //               xmlns=\"http://www.w3.org/2000/svg\"\n//     //               width=\"20\"\n//     //               height=\"20\"\n//     //               fill=\"currentColor\"\n//     //               className=\"bi bi-arrow-left\"\n//     //               viewBox=\"0 0 16 16\"\n//     //             >\n//     //               <path\n//     //                 fillRule=\"evenodd\"\n//     //                 d=\"M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z\"\n//     //               />\n//     //             </svg>\n//     //             <span>Start Shopping</span>\n//     //           </Link>\n//     //         </div>\n//     //       </div>\n//     //     ) : (\n//     //       <div>\n//     //         <div className=\"titles\">\n//     //           <h3 className=\"product-title\">Product</h3>\n//     //           <h3 className=\"price\">Price</h3>\n//     //           <h3 className=\"quantity\">Quantity</h3>\n//     //           <h3 className=\"total\">Total</h3>\n//     //         </div>\n//     //         <div className=\"cart-items\">\n//     //           {cart.cartItems.map((cartItem) => (\n//     //             <div className=\"cart-item\" key={cartItem.id}>\n//     //               <div className=\"cart-product\">\n//     //                 <img src={cartItem.image} alt={cartItem.name} />\n//     //                 <div>\n//     //                   <h3>{cartItem.name}</h3>\n//     //                   <p>{cartItem.desc}</p>\n//     //                   <button\n//     //                     onClick={() => this.handleRemoveFromCart(cartItem)}\n//     //                   >\n//     //                     Remove\n//     //                   </button>\n//     //                 </div>\n//     //               </div>\n//     //               <div className=\"cart-product-price\">${cartItem.price}</div>\n//     //               <div className=\"cart-product-quantity\">\n//     //                 <button onClick={() => this.handleDecreaseCart(cartItem)}>\n//     //                   -\n//     //                 </button>\n//     //                 <div className=\"count\">{cartItem.cartQuantity}</div>\n//     //                 <button onClick={() => this.handleAddToCart(cartItem)}>\n//     //                   +\n//     //                 </button>\n//     //               </div>\n//     //               <div className=\"cart-product-total-price\">\n//     //                 ${cartItem.price * cartItem.cartQuantity}\n//     //               </div>\n//     //             </div>\n//     //           ))}\n//     //         </div>\n//     //         <div className=\"cart-summary\">\n//     //           <button\n//     //             className=\"clear-btn\"\n//     //             onClick={() => this.handleClearCart()}\n//     //           >\n//     //             Clear Cart\n//     //           </button>\n//     //           <div className=\"cart-checkout\">\n//     //             <div className=\"subtotal\">\n//     //               <span>Subtotal</span>\n//     //               <span className=\"amount\">${cart.cartTotalAmount}</span>\n//     //             </div>\n//     //             <p>Taxes and shipping calculated at checkout</p>\n//     //             <button>Check out</button>\n//     //             <div className=\"continue-shopping\">\n//     //               <Link to=\"/\">\n//     //                 <svg\n//     //                   xmlns=\"http://www.w3.org/2000/svg\"\n//     //                   width=\"20\"\n//     //                   height=\"20\"\n//     //                   fill=\"currentColor\"\n//     //                   className=\"bi bi-arrow-left\"\n//     //                   viewBox=\"0 0 16 16\"\n//     //                 >\n//     //                   <path\n//     //                     fillRule=\"evenodd\"\n//     //                     d=\"M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z\"\n//     //                   />\n//     //                 </svg>\n//     //                 <span>Continue Shopping</span>\n//     //               </Link>\n//     //             </div>\n//     //           </div>\n//     //         </div>\n//     //       </div>\n//     //     )}\n//     //   </div>\n//     // );\n//     return (\n//       <div className=\"cart-container\">\n//         <h2>Shopping Cart</h2>\n//         {cart.cartItems.length === 0 ? (\n//           <div className=\"cart-empty\">\n//             <p>Your cart is currently empty</p>\n//             <div className=\"start-shopping\">\n//               <Link to=\"/\">\n//                 <svg\n//                   xmlns=\"http://www.w3.org/2000/svg\"\n//                   width=\"20\"\n//                   height=\"20\"\n//                   fill=\"currentColor\"\n//                   className=\"bi bi-arrow-left\"\n//                   viewBox=\"0 0 16 16\"\n//                 >\n//                   <path\n//                     fillRule=\"evenodd\"\n//                     d=\"M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z\"\n//                   />\n//                 </svg>\n//                 <span>Start Shopping</span>\n//               </Link>\n//             </div>\n//           </div>\n//         ) : (\n//           <div>\n//             <div className=\"titles\">\n//               <h3 className=\"product-title\">Product</h3>\n//               <h3 className=\"price\">Price</h3>\n//               <h3 className=\"quantity\">Quantity</h3>\n//               <h3 className=\"total\">Total</h3>\n//             </div>\n//             <div className=\"cart-items\">\n//               {cart.cartItems.map((cartItem) => (\n//                 <div className=\"cart-item\" key={cartItem.id}>\n//                   <div className=\"cart-product\">\n//                     <img src={cartItem.image} alt={cartItem.name} />\n//                     <div>\n//                       <h3>{cartItem.name}</h3>\n//                       <p>{cartItem.desc}</p>\n//                       <button\n//                         onClick={() => this.handleRemoveFromCart(cartItem)}\n//                       >\n//                         Remove\n//                       </button>\n//                     </div>\n//                   </div>\n//                   <div className=\"cart-product-price\">${cartItem.price}</div>\n//                   <div className=\"cart-product-quantity\">\n//                     <button onClick={() => this.handleDecreaseCart(cartItem)}>\n//                       -\n//                     </button>\n//                     <div className=\"count\">{cartItem.cartQuantity}</div>\n//                     <button onClick={() => this.handleAddToCart(cartItem)}>\n//                       +\n//                     </button>\n//                   </div>\n//                   <div className=\"cart-product-total-price\">\n//                     ${cartItem.price * cartItem.cartQuantity}\n//                   </div>\n//                 </div>\n//               ))}\n//             </div>\n//             <div className=\"cart-summary\">\n//               <button\n//                 className=\"clear-btn\"\n//                 onClick={() => this.handleClearCart()}\n//               >\n//                 Clear Cart\n//               </button>\n//               <div className=\"cart-checkout\">\n//                 <div className=\"subtotal\">\n//                   <span>Subtotal</span>\n//                   <span className=\"amount\">${cart.cartTotalAmount}</span>\n//                 </div>\n//                 <p>Taxes and shipping calculated at checkout</p>\n//                 <button>Check out</button>\n//                 <div className=\"continue-shopping\">\n//                   <Link to=\"/\">\n//                     <svg\n//                       xmlns=\"http://www.w3.org/2000/svg\"\n//                       width=\"20\"\n//                       height=\"20\"\n//                       fill=\"currentColor\"\n//                       className=\"bi bi-arrow-left\"\n//                       viewBox=\"0 0 16 16\"\n//                     >\n//                       <path\n//                         fillRule=\"evenodd\"\n//                         d=\"M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z\"\n//                       />\n//                     </svg>\n//                     <span>Continue Shopping</span>\n//                   </Link>\n//                 </div>\n//               </div>\n//             </div>\n//             <div className=\"checkout-form\">\n//               <h3>Checkout Form</h3>\n//               <form onSubmit={this.handleSubmit}>\n//                 <div className=\"form-group\">\n//                   <label htmlFor=\"firstName\">First Name:</label>\n//                   <input\n//                     type=\"text\"\n//                     name=\"firstName\"\n//                     value={firstName}\n//                     onChange={this.handleInputChange}\n//                     required\n//                   />\n//                 </div>\n//                 <button type=\"submit\">Submit Order</button>\n//               </form>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n//     );    \n//   }\n// }\n// const mapStateToProps = (state) => ({\n//   cart: state.cart,\n// });\n// export default connect(mapStateToProps)(Cart);\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { addToCart, clearCart, decreaseCart, getTotals, removeFromCart } from \"../slices/cartSlice\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Cart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAddToCart = product => {\n      this.props.dispatch(addToCart(product));\n    };\n\n    this.handleDecreaseCart = product => {\n      this.props.dispatch(decreaseCart(product));\n    };\n\n    this.handleRemoveFromCart = product => {\n      this.props.dispatch(removeFromCart(product));\n    };\n\n    this.handleClearCart = () => {\n      this.props.dispatch(clearCart());\n    };\n\n    this.handleInputChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault(); // Perform form submission and validation here\n\n      const {\n        firstName,\n        lastName,\n        age,\n        address,\n        phoneNumber\n      } = this.state; // Perform basic form validation\n\n      if (!firstName || !lastName || !age || !address || !phoneNumber) {\n        alert(\"Please fill out all fields.\");\n        return;\n      } // Perform additional validation if needed\n\n\n      if (isNaN(age) || isNaN(phoneNumber)) {\n        alert(\"Invalid age or phone number.\");\n        return;\n      } // If all validations pass, you can proceed with the submission\n\n\n      const formData = {\n        firstName,\n        lastName,\n        age: parseInt(age),\n        address,\n        phoneNumber,\n        cartItems: this.props.cart.cartItems,\n        totalAmount: this.props.cart.cartTotalAmount\n      }; // Perform your submission logic here, such as sending data to a server\n      // For demonstration, let's just log the form data\n\n      console.log(\"Form data:\", formData); // Clear the form fields after successful submission\n\n      this.setState({\n        firstName: \"\",\n        lastName: \"\",\n        age: \"\",\n        address: \"\",\n        phoneNumber: \"\"\n      }); // Optionally, you can navigate to a confirmation page or perform other actions\n    };\n\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      age: \"\",\n      address: \"\",\n      phoneNumber: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(getTotals());\n  }\n\n  render() {\n    const {\n      cart\n    } = this.props;\n    const {\n      firstName,\n      lastName,\n      age,\n      address,\n      phoneNumber\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Shopping Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this), cart.cartItems.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart-empty\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your cart is currently empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"start-shopping\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              width: \"20\",\n              height: \"20\",\n              fill: \"currentColor\",\n              className: \"bi bi-arrow-left\",\n              viewBox: \"0 0 16 16\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Start Shopping\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"titles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-items\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkout-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Checkout Form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"firstName\",\n                children: \"First Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"firstName\",\n                value: firstName,\n                onChange: this.handleInputChange,\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Submit Order\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  cart: state.cart\n});\n\nexport default connect(mapStateToProps)(Cart);","map":{"version":3,"sources":["/Users/mbp15inch/Downloads/complete-shopping-cart-main/front/src/components/Cart.jsx"],"names":["React","Component","connect","addToCart","clearCart","decreaseCart","getTotals","removeFromCart","Link","Cart","constructor","props","handleAddToCart","product","dispatch","handleDecreaseCart","handleRemoveFromCart","handleClearCart","handleInputChange","event","name","value","target","setState","handleSubmit","preventDefault","firstName","lastName","age","address","phoneNumber","state","alert","isNaN","formData","parseInt","cartItems","cart","totalAmount","cartTotalAmount","console","log","componentDidMount","render","length","mapStateToProps"],"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","sourcesContent":["// import React, { Component } from \"react\";\n// import { connect } from \"react-redux\";\n// import {\n//   addToCart,\n//   clearCart,\n//   decreaseCart,\n//   getTotals,\n//   removeFromCart,\n// } from \"../slices/cartSlice\";\n\n// import { Link } from \"react-router-dom\";\n\n// class Cart extends Component {\n//   componentDidMount() {\n//     this.props.dispatch(getTotals());\n//   }\n\n//   handleAddToCart = (product) => {\n//     this.props.dispatch(addToCart(product));\n//   };\n\n//   handleDecreaseCart = (product) => {\n//     this.props.dispatch(decreaseCart(product));\n//   };\n\n//   handleRemoveFromCart = (product) => {\n//     this.props.dispatch(removeFromCart(product));\n//   };\n\n//   handleClearCart = () => {\n//     this.props.dispatch(clearCart());\n//   };\n\n//   render() {\n//     const { cart } = this.props;\n\n//     // return (\n//     //   <div className=\"cart-container\">\n//     //     <h2>Shopping Cart</h2>\n//     //     {cart.cartItems.length === 0 ? (\n//     //       <div className=\"cart-empty\">\n//     //         <p>Your cart is currently empty</p>\n//     //         <div className=\"start-shopping\">\n//     //           <Link to=\"/\">\n//     //             <svg\n//     //               xmlns=\"http://www.w3.org/2000/svg\"\n//     //               width=\"20\"\n//     //               height=\"20\"\n//     //               fill=\"currentColor\"\n//     //               className=\"bi bi-arrow-left\"\n//     //               viewBox=\"0 0 16 16\"\n//     //             >\n//     //               <path\n//     //                 fillRule=\"evenodd\"\n//     //                 d=\"M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z\"\n//     //               />\n//     //             </svg>\n//     //             <span>Start Shopping</span>\n//     //           </Link>\n//     //         </div>\n//     //       </div>\n//     //     ) : (\n//     //       <div>\n//     //         <div className=\"titles\">\n//     //           <h3 className=\"product-title\">Product</h3>\n//     //           <h3 className=\"price\">Price</h3>\n//     //           <h3 className=\"quantity\">Quantity</h3>\n//     //           <h3 className=\"total\">Total</h3>\n//     //         </div>\n//     //         <div className=\"cart-items\">\n//     //           {cart.cartItems.map((cartItem) => (\n//     //             <div className=\"cart-item\" key={cartItem.id}>\n//     //               <div className=\"cart-product\">\n//     //                 <img src={cartItem.image} alt={cartItem.name} />\n//     //                 <div>\n//     //                   <h3>{cartItem.name}</h3>\n//     //                   <p>{cartItem.desc}</p>\n//     //                   <button\n//     //                     onClick={() => this.handleRemoveFromCart(cartItem)}\n//     //                   >\n//     //                     Remove\n//     //                   </button>\n//     //                 </div>\n//     //               </div>\n//     //               <div className=\"cart-product-price\">${cartItem.price}</div>\n//     //               <div className=\"cart-product-quantity\">\n//     //                 <button onClick={() => this.handleDecreaseCart(cartItem)}>\n//     //                   -\n//     //                 </button>\n//     //                 <div className=\"count\">{cartItem.cartQuantity}</div>\n//     //                 <button onClick={() => this.handleAddToCart(cartItem)}>\n//     //                   +\n//     //                 </button>\n//     //               </div>\n//     //               <div className=\"cart-product-total-price\">\n//     //                 ${cartItem.price * cartItem.cartQuantity}\n//     //               </div>\n//     //             </div>\n//     //           ))}\n//     //         </div>\n//     //         <div className=\"cart-summary\">\n//     //           <button\n//     //             className=\"clear-btn\"\n//     //             onClick={() => this.handleClearCart()}\n//     //           >\n//     //             Clear Cart\n//     //           </button>\n//     //           <div className=\"cart-checkout\">\n//     //             <div className=\"subtotal\">\n//     //               <span>Subtotal</span>\n//     //               <span className=\"amount\">${cart.cartTotalAmount}</span>\n//     //             </div>\n//     //             <p>Taxes and shipping calculated at checkout</p>\n//     //             <button>Check out</button>\n//     //             <div className=\"continue-shopping\">\n//     //               <Link to=\"/\">\n//     //                 <svg\n//     //                   xmlns=\"http://www.w3.org/2000/svg\"\n//     //                   width=\"20\"\n//     //                   height=\"20\"\n//     //                   fill=\"currentColor\"\n//     //                   className=\"bi bi-arrow-left\"\n//     //                   viewBox=\"0 0 16 16\"\n//     //                 >\n//     //                   <path\n//     //                     fillRule=\"evenodd\"\n//     //                     d=\"M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z\"\n//     //                   />\n//     //                 </svg>\n//     //                 <span>Continue Shopping</span>\n//     //               </Link>\n//     //             </div>\n//     //           </div>\n//     //         </div>\n//     //       </div>\n//     //     )}\n//     //   </div>\n//     // );\n//     return (\n//       <div className=\"cart-container\">\n//         <h2>Shopping Cart</h2>\n//         {cart.cartItems.length === 0 ? (\n//           <div className=\"cart-empty\">\n//             <p>Your cart is currently empty</p>\n//             <div className=\"start-shopping\">\n//               <Link to=\"/\">\n//                 <svg\n//                   xmlns=\"http://www.w3.org/2000/svg\"\n//                   width=\"20\"\n//                   height=\"20\"\n//                   fill=\"currentColor\"\n//                   className=\"bi bi-arrow-left\"\n//                   viewBox=\"0 0 16 16\"\n//                 >\n//                   <path\n//                     fillRule=\"evenodd\"\n//                     d=\"M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z\"\n//                   />\n//                 </svg>\n//                 <span>Start Shopping</span>\n//               </Link>\n//             </div>\n//           </div>\n//         ) : (\n//           <div>\n//             <div className=\"titles\">\n//               <h3 className=\"product-title\">Product</h3>\n//               <h3 className=\"price\">Price</h3>\n//               <h3 className=\"quantity\">Quantity</h3>\n//               <h3 className=\"total\">Total</h3>\n//             </div>\n//             <div className=\"cart-items\">\n//               {cart.cartItems.map((cartItem) => (\n//                 <div className=\"cart-item\" key={cartItem.id}>\n//                   <div className=\"cart-product\">\n//                     <img src={cartItem.image} alt={cartItem.name} />\n//                     <div>\n//                       <h3>{cartItem.name}</h3>\n//                       <p>{cartItem.desc}</p>\n//                       <button\n//                         onClick={() => this.handleRemoveFromCart(cartItem)}\n//                       >\n//                         Remove\n//                       </button>\n//                     </div>\n//                   </div>\n//                   <div className=\"cart-product-price\">${cartItem.price}</div>\n//                   <div className=\"cart-product-quantity\">\n//                     <button onClick={() => this.handleDecreaseCart(cartItem)}>\n//                       -\n//                     </button>\n//                     <div className=\"count\">{cartItem.cartQuantity}</div>\n//                     <button onClick={() => this.handleAddToCart(cartItem)}>\n//                       +\n//                     </button>\n//                   </div>\n//                   <div className=\"cart-product-total-price\">\n//                     ${cartItem.price * cartItem.cartQuantity}\n//                   </div>\n//                 </div>\n//               ))}\n//             </div>\n//             <div className=\"cart-summary\">\n//               <button\n//                 className=\"clear-btn\"\n//                 onClick={() => this.handleClearCart()}\n//               >\n//                 Clear Cart\n//               </button>\n//               <div className=\"cart-checkout\">\n//                 <div className=\"subtotal\">\n//                   <span>Subtotal</span>\n//                   <span className=\"amount\">${cart.cartTotalAmount}</span>\n//                 </div>\n//                 <p>Taxes and shipping calculated at checkout</p>\n//                 <button>Check out</button>\n//                 <div className=\"continue-shopping\">\n//                   <Link to=\"/\">\n//                     <svg\n//                       xmlns=\"http://www.w3.org/2000/svg\"\n//                       width=\"20\"\n//                       height=\"20\"\n//                       fill=\"currentColor\"\n//                       className=\"bi bi-arrow-left\"\n//                       viewBox=\"0 0 16 16\"\n//                     >\n//                       <path\n//                         fillRule=\"evenodd\"\n//                         d=\"M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z\"\n//                       />\n//                     </svg>\n//                     <span>Continue Shopping</span>\n//                   </Link>\n//                 </div>\n//               </div>\n//             </div>\n//             <div className=\"checkout-form\">\n//               <h3>Checkout Form</h3>\n//               <form onSubmit={this.handleSubmit}>\n//                 <div className=\"form-group\">\n//                   <label htmlFor=\"firstName\">First Name:</label>\n//                   <input\n//                     type=\"text\"\n//                     name=\"firstName\"\n//                     value={firstName}\n//                     onChange={this.handleInputChange}\n//                     required\n//                   />\n//                 </div>\n//                 <button type=\"submit\">Submit Order</button>\n//               </form>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n//     );    \n//   }\n// }\n\n// const mapStateToProps = (state) => ({\n//   cart: state.cart,\n// });\n\n// export default connect(mapStateToProps)(Cart);\n\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  addToCart,\n  clearCart,\n  decreaseCart,\n  getTotals,\n  removeFromCart,\n} from \"../slices/cartSlice\";\nimport { Link } from \"react-router-dom\";\n\nclass Cart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      age: \"\",\n      address: \"\",\n      phoneNumber: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(getTotals());\n  }\n\n  handleAddToCart = (product) => {\n    this.props.dispatch(addToCart(product));\n  };\n\n  handleDecreaseCart = (product) => {\n    this.props.dispatch(decreaseCart(product));\n  };\n\n  handleRemoveFromCart = (product) => {\n    this.props.dispatch(removeFromCart(product));\n  };\n\n  handleClearCart = () => {\n    this.props.dispatch(clearCart());\n  };\n\n  handleInputChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    // Perform form submission and validation here\n    const {\n      firstName,\n      lastName,\n      age,\n      address,\n      phoneNumber,\n    } = this.state;\n\n    // Perform basic form validation\n    if (!firstName || !lastName || !age || !address || !phoneNumber) {\n      alert(\"Please fill out all fields.\");\n      return;\n    }\n\n    // Perform additional validation if needed\n    if (isNaN(age) || isNaN(phoneNumber)) {\n      alert(\"Invalid age or phone number.\");\n      return;\n    }\n\n    // If all validations pass, you can proceed with the submission\n    const formData = {\n      firstName,\n      lastName,\n      age: parseInt(age),\n      address,\n      phoneNumber,\n      cartItems: this.props.cart.cartItems,\n      totalAmount: this.props.cart.cartTotalAmount,\n    };\n\n    // Perform your submission logic here, such as sending data to a server\n    // For demonstration, let's just log the form data\n    console.log(\"Form data:\", formData);\n\n    // Clear the form fields after successful submission\n    this.setState({\n      firstName: \"\",\n      lastName: \"\",\n      age: \"\",\n      address: \"\",\n      phoneNumber: \"\",\n    });\n\n    // Optionally, you can navigate to a confirmation page or perform other actions\n  };\n\n  render() {\n    const { cart } = this.props;\n    const {\n      firstName,\n      lastName,\n      age,\n      address,\n      phoneNumber,\n    } = this.state;\n\n    return (\n      <div className=\"cart-container\">\n        <h2>Shopping Cart</h2>\n        {cart.cartItems.length === 0 ? (\n          <div className=\"cart-empty\">\n            <p>Your cart is currently empty</p>\n            <div className=\"start-shopping\">\n              <Link to=\"/\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"20\"\n                  height=\"20\"\n                  fill=\"currentColor\"\n                  className=\"bi bi-arrow-left\"\n                  viewBox=\"0 0 16 16\"\n                >\n                  {/* ... SVG path data ... */}\n                </svg>\n                <span>Start Shopping</span>\n              </Link>\n            </div>\n          </div>\n        ) : (\n          <div>\n            <div className=\"titles\">\n              {/* ... Existing titles ... */}\n            </div>\n            <div className=\"cart-items\">\n              {/* ... Existing cart items rendering ... */}\n            </div>\n            <div className=\"cart-summary\">\n              {/* ... Existing summary rendering ... */}\n            </div>\n            <div className=\"checkout-form\">\n              <h3>Checkout Form</h3>\n              <form onSubmit={this.handleSubmit}>\n                <div className=\"form-group\">\n                  <label htmlFor=\"firstName\">First Name:</label>\n                  <input\n                    type=\"text\"\n                    name=\"firstName\"\n                    value={firstName}\n                    onChange={this.handleInputChange}\n                    required\n                  />\n                </div>\n                {/* ... Add other form fields here ... */}\n                <button type=\"submit\">Submit Order</button>\n              </form>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  cart: state.cart,\n});\n\nexport default connect(mapStateToProps)(Cart);\n"]},"metadata":{},"sourceType":"module"}