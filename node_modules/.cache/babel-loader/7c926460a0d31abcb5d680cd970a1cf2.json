{"ast":null,"code":"// import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n// export const productsApi = createApi({\n//   reducerPath: \"productsApi\",\n//   baseQuery: fetchBaseQuery({ baseUrl: \"http://localhost:5000/\" }),\n//   endpoints: (builder) => ({\n//     getAllProducts: builder.query({\n//       query: () => `products`,\n//     }),\n//   }),\n// });\n// export const { useGetAllProductsQuery } = productsApi;\n// slices/productsApi.js\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  data: [],\n  loading: false,\n  error: null\n};\nconst productsApiSlice = createSlice({\n  name: \"productsApi\",\n  initialState,\n  reducers: {\n    fetchAllProductsStart: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    fetchAllProductsSuccess: (state, action) => {\n      state.data = action.payload;\n      state.loading = false;\n      state.error = null;\n    },\n    fetchAllProductsFailure: (state, action) => {\n      state.data = [];\n      state.loading = false;\n      state.error = action.payload;\n    }\n  }\n});\nexport const {\n  fetchAllProductsStart,\n  fetchAllProductsSuccess,\n  fetchAllProductsFailure\n} = productsApiSlice.actions;\nexport default productsApiSlice.reducer; // Thunk action creator\n\nexport const fetchAllProducts = () => async dispatch => {\n  dispatch(fetchAllProductsStart());\n\n  try {\n    const response = await axios.get(\"http://localhost:5000/products\");\n    dispatch(fetchAllProductsSuccess(response.data));\n  } catch (error) {\n    dispatch(fetchAllProductsFailure(error.message || \"An error occurred\"));\n  }\n};","map":{"version":3,"sources":["/Users/mbp15inch/Downloads/complete-shopping-cart-main/front/src/slices/productsApi.js"],"names":["createSlice","axios","initialState","data","loading","error","productsApiSlice","name","reducers","fetchAllProductsStart","state","fetchAllProductsSuccess","action","payload","fetchAllProductsFailure","actions","reducer","fetchAllProducts","dispatch","response","get","message"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,OAAO,EAAE,KAFU;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;AAMA,MAAMC,gBAAgB,GAAGN,WAAW,CAAC;AACnCO,EAAAA,IAAI,EAAE,aAD6B;AAEnCL,EAAAA,YAFmC;AAGnCM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,qBAAqB,EAAGC,KAAD,IAAW;AAChCA,MAAAA,KAAK,CAACN,OAAN,GAAgB,IAAhB;AACAM,MAAAA,KAAK,CAACL,KAAN,GAAc,IAAd;AACD,KAJO;AAKRM,IAAAA,uBAAuB,EAAE,CAACD,KAAD,EAAQE,MAAR,KAAmB;AAC1CF,MAAAA,KAAK,CAACP,IAAN,GAAaS,MAAM,CAACC,OAApB;AACAH,MAAAA,KAAK,CAACN,OAAN,GAAgB,KAAhB;AACAM,MAAAA,KAAK,CAACL,KAAN,GAAc,IAAd;AACD,KATO;AAURS,IAAAA,uBAAuB,EAAE,CAACJ,KAAD,EAAQE,MAAR,KAAmB;AAC1CF,MAAAA,KAAK,CAACP,IAAN,GAAa,EAAb;AACAO,MAAAA,KAAK,CAACN,OAAN,GAAgB,KAAhB;AACAM,MAAAA,KAAK,CAACL,KAAN,GAAcO,MAAM,CAACC,OAArB;AACD;AAdO;AAHyB,CAAD,CAApC;AAqBA,OAAO,MAAM;AACXJ,EAAAA,qBADW;AAEXE,EAAAA,uBAFW;AAGXG,EAAAA;AAHW,IAITR,gBAAgB,CAACS,OAJd;AAMP,eAAeT,gBAAgB,CAACU,OAAhC,C,CAEA;;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACxDA,EAAAA,QAAQ,CAACT,qBAAqB,EAAtB,CAAR;;AAEA,MAAI;AACF,UAAMU,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CAAU,gCAAV,CAAvB;AACAF,IAAAA,QAAQ,CAACP,uBAAuB,CAACQ,QAAQ,CAAChB,IAAV,CAAxB,CAAR;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACda,IAAAA,QAAQ,CAACJ,uBAAuB,CAACT,KAAK,CAACgB,OAAN,IAAiB,mBAAlB,CAAxB,CAAR;AACD;AACF,CATM","sourcesContent":["// import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\n// export const productsApi = createApi({\n//   reducerPath: \"productsApi\",\n//   baseQuery: fetchBaseQuery({ baseUrl: \"http://localhost:5000/\" }),\n//   endpoints: (builder) => ({\n//     getAllProducts: builder.query({\n//       query: () => `products`,\n//     }),\n//   }),\n// });\n\n// export const { useGetAllProductsQuery } = productsApi;\n\n\n// slices/productsApi.js\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n  data: [],\n  loading: false,\n  error: null,\n};\n\nconst productsApiSlice = createSlice({\n  name: \"productsApi\",\n  initialState,\n  reducers: {\n    fetchAllProductsStart: (state) => {\n      state.loading = true;\n      state.error = null;\n    },\n    fetchAllProductsSuccess: (state, action) => {\n      state.data = action.payload;\n      state.loading = false;\n      state.error = null;\n    },\n    fetchAllProductsFailure: (state, action) => {\n      state.data = [];\n      state.loading = false;\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const {\n  fetchAllProductsStart,\n  fetchAllProductsSuccess,\n  fetchAllProductsFailure,\n} = productsApiSlice.actions;\n\nexport default productsApiSlice.reducer;\n\n// Thunk action creator\nexport const fetchAllProducts = () => async (dispatch) => {\n  dispatch(fetchAllProductsStart());\n\n  try {\n    const response = await axios.get(\"http://localhost:5000/products\");\n    dispatch(fetchAllProductsSuccess(response.data));\n  } catch (error) {\n    dispatch(fetchAllProductsFailure(error.message || \"An error occurred\"));\n  }\n};\n"]},"metadata":{},"sourceType":"module"}