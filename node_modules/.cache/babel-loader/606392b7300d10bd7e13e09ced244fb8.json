{"ast":null,"code":"import { createSlice, combineReducers } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nconst favoritesSlice = createSlice({\n  name: \"favorites\",\n  initialState: {\n    items: []\n  },\n  reducers: {\n    addToFavorites(state, action) {\n      const tempProductItem = {\n        ...action.payload,\n        cartQuantity: 1\n      };\n      state.items.push(tempProductItem);\n      toast.success(\"Product added to favorites\", {\n        position: \"bottom-left\"\n      });\n      localStorage.setItem(\"favorites\", JSON.stringify(state.items));\n    },\n    decreaseFavorites(state, action) {\n      const itemIndex = state.items.findIndex(item => item.id === action.payload.id);\n      if (state.items[itemIndex].cartQuantity > 1) {\n        state.items[itemIndex].cartQuantity -= 1;\n        toast.info(\"Decreased product quantity\", {\n          position: \"bottom-left\"\n        });\n      } else if (state.items[itemIndex].cartQuantity === 1) {\n        state.items = state.items.filter(item => item.id !== action.payload.id);\n        toast.error(\"Product removed from favorites\", {\n          position: \"bottom-left\"\n        });\n      }\n      localStorage.setItem(\"favorites\", JSON.stringify(state.items));\n    },\n    removeFromFavorites(state, action) {\n      state.items = state.items.filter(item => item.id !== action.payload.id);\n      toast.error(\"Product removed from favorites\", {\n        position: \"bottom-left\"\n      });\n      localStorage.setItem(\"favorites\", JSON.stringify(state.items));\n    }\n  }\n});\nexport const {\n  addToFavorites,\n  decreaseFavorites,\n  removeFromFavorites\n} = favoritesSlice.actions;\nconst rootReducer = combineReducers({\n  favorites: favoritesSlice.reducer\n});\nexport default rootReducer;","map":{"version":3,"names":["createSlice","combineReducers","toast","favoritesSlice","name","initialState","items","reducers","addToFavorites","state","action","tempProductItem","payload","cartQuantity","push","success","position","localStorage","setItem","JSON","stringify","decreaseFavorites","itemIndex","findIndex","item","id","info","filter","error","removeFromFavorites","actions","rootReducer","favorites","reducer"],"sources":["/Users/nurlanaaliyeva/Downloads/complete-shopping-cart-main/front/src/slices/favoritesSlice.js"],"sourcesContent":["import { createSlice, combineReducers } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst favoritesSlice = createSlice({\n  name: \"favorites\",\n  initialState: {\n    items: [],\n  },\n  reducers: {\n    addToFavorites(state, action) {\n      const tempProductItem = { ...action.payload, cartQuantity: 1 };\n      state.items.push(tempProductItem);\n      toast.success(\"Product added to favorites\", {\n        position: \"bottom-left\",\n      });\n      localStorage.setItem(\"favorites\", JSON.stringify(state.items));\n    },\n    decreaseFavorites(state, action) {\n      const itemIndex = state.items.findIndex(\n        (item) => item.id === action.payload.id\n      );\n      if (state.items[itemIndex].cartQuantity > 1) {\n        state.items[itemIndex].cartQuantity -= 1;\n        toast.info(\"Decreased product quantity\", {\n          position: \"bottom-left\",\n        });\n      } else if (state.items[itemIndex].cartQuantity === 1) {\n        state.items = state.items.filter(\n          (item) => item.id !== action.payload.id\n        );\n        toast.error(\"Product removed from favorites\", {\n          position: \"bottom-left\",\n        });\n      }\n      localStorage.setItem(\"favorites\", JSON.stringify(state.items));\n    },\n    removeFromFavorites(state, action) {\n      state.items = state.items.filter(\n        (item) => item.id !== action.payload.id\n      );\n      toast.error(\"Product removed from favorites\", {\n        position: \"bottom-left\",\n      });\n      localStorage.setItem(\"favorites\", JSON.stringify(state.items));\n    },\n  },\n});\n\nexport const { addToFavorites, decreaseFavorites, removeFromFavorites } =\n  favoritesSlice.actions;\n\nconst rootReducer = combineReducers({\n  favorites: favoritesSlice.reducer,\n});\n\nexport default rootReducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,QAAQ,kBAAkB;AAC/D,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAO,uCAAuC;AAE9C,MAAMC,cAAc,GAAGH,WAAW,CAAC;EACjCI,IAAI,EAAE,WAAW;EACjBC,YAAY,EAAE;IACZC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,cAAcA,CAACC,KAAK,EAAEC,MAAM,EAAE;MAC5B,MAAMC,eAAe,GAAG;QAAE,GAAGD,MAAM,CAACE,OAAO;QAAEC,YAAY,EAAE;MAAE,CAAC;MAC9DJ,KAAK,CAACH,KAAK,CAACQ,IAAI,CAACH,eAAe,CAAC;MACjCT,KAAK,CAACa,OAAO,CAAC,4BAA4B,EAAE;QAC1CC,QAAQ,EAAE;MACZ,CAAC,CAAC;MACFC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAACX,KAAK,CAACH,KAAK,CAAC,CAAC;IAChE,CAAC;IACDe,iBAAiBA,CAACZ,KAAK,EAAEC,MAAM,EAAE;MAC/B,MAAMY,SAAS,GAAGb,KAAK,CAACH,KAAK,CAACiB,SAAS,CACpCC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKf,MAAM,CAACE,OAAO,CAACa,EACvC,CAAC;MACD,IAAIhB,KAAK,CAACH,KAAK,CAACgB,SAAS,CAAC,CAACT,YAAY,GAAG,CAAC,EAAE;QAC3CJ,KAAK,CAACH,KAAK,CAACgB,SAAS,CAAC,CAACT,YAAY,IAAI,CAAC;QACxCX,KAAK,CAACwB,IAAI,CAAC,4BAA4B,EAAE;UACvCV,QAAQ,EAAE;QACZ,CAAC,CAAC;MACJ,CAAC,MAAM,IAAIP,KAAK,CAACH,KAAK,CAACgB,SAAS,CAAC,CAACT,YAAY,KAAK,CAAC,EAAE;QACpDJ,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACH,KAAK,CAACqB,MAAM,CAC7BH,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKf,MAAM,CAACE,OAAO,CAACa,EACvC,CAAC;QACDvB,KAAK,CAAC0B,KAAK,CAAC,gCAAgC,EAAE;UAC5CZ,QAAQ,EAAE;QACZ,CAAC,CAAC;MACJ;MACAC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAACX,KAAK,CAACH,KAAK,CAAC,CAAC;IAChE,CAAC;IACDuB,mBAAmBA,CAACpB,KAAK,EAAEC,MAAM,EAAE;MACjCD,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACH,KAAK,CAACqB,MAAM,CAC7BH,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKf,MAAM,CAACE,OAAO,CAACa,EACvC,CAAC;MACDvB,KAAK,CAAC0B,KAAK,CAAC,gCAAgC,EAAE;QAC5CZ,QAAQ,EAAE;MACZ,CAAC,CAAC;MACFC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAACX,KAAK,CAACH,KAAK,CAAC,CAAC;IAChE;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEE,cAAc;EAAEa,iBAAiB;EAAEQ;AAAoB,CAAC,GACrE1B,cAAc,CAAC2B,OAAO;AAExB,MAAMC,WAAW,GAAG9B,eAAe,CAAC;EAClC+B,SAAS,EAAE7B,cAAc,CAAC8B;AAC5B,CAAC,CAAC;AAEF,eAAeF,WAAW"},"metadata":{},"sourceType":"module"}