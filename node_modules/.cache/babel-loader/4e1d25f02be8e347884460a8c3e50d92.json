{"ast":null,"code":"// import { createSlice, combineReducers } from \"@reduxjs/toolkit\";\n// import toast from \"react-toastify\";\n// const favoritesSlice = createSlice({\n//   name: \"favorites\",\n//   initialState: {\n//     favorites: [],\n//   },\n//   reducers: {\n//     addToFavorites(state, action) {\n//       const tempProductItem = { ...action.payload, cartQuantity: 1 };\n//       state.favorites.push(tempProductItem);\n//       toast.success(\"Product added to favorites\", {\n//         position: \"bottom-left\",\n//       });\n//       localStorage.setItem(\"favorites\", JSON.stringify(state.favorites));\n//     },\n//     decreaseFavorites(state, action) {\n//       const itemIndex = state.favorites.findIndex(\n//         (item) => item.id === action.payload.id\n//       );\n//       if (state.favorites[itemIndex].cartQuantity > 1) {\n//         state.favorites[itemIndex].cartQuantity -= 1;\n//         toast.info(\"Decreased product quantity\", {\n//           position: \"bottom-left\",\n//         });\n//       } else if (state.favorites[itemIndex].cartQuantity === 1) {\n//         const nextFavorites = state.favorites.filter(\n//           (item) => item.id !== action.payload.id\n//         );\n//         state.favorites = nextFavorites;\n//         toast.error(\"Product removed from favorites\", {\n//           position: \"bottom-left\",\n//         });\n//       }\n//       localStorage.setItem(\"favorites\", JSON.stringify(state.favorites));\n//     },\n//     removeFromFavorites(state, action) {\n//       const itemIndex = state.favorites.findIndex(\n//         (item) => item.id === action.payload.id\n//       );\n//       if (itemIndex !== -1) {\n//         const nextFavorites = state.favorites.filter(\n//           (item) => item.id !== action.payload.id\n//         );\n//         state.favorites = nextFavorites;\n//         toast.error(\"Product removed from favorites\")\nimport { createSlice, combineReducers } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\"; // Make sure you're importing toast correctly\n\nimport \"react-toastify/dist/ReactToastify.css\"; // Import the toast styles if you haven't\n\nconst favoritesSlice = createSlice({\n  name: \"favorites\",\n  initialState: {\n    favorites: []\n  },\n  reducers: {\n    addToFavorites(state, action) {\n      const tempProductItem = { ...action.payload,\n        cartQuantity: 1\n      };\n      state.favorites.push(tempProductItem);\n      toast.success(\"Product added to favorites\", {\n        position: \"bottom-left\"\n      });\n      localStorage.setItem(\"favorites\", JSON.stringify(state.favorites));\n    },\n\n    decreaseFavorites(state, action) {\n      const itemIndex = state.favorites.findIndex(item => item.id === action.payload.id);\n\n      if (state.favorites[itemIndex].cartQuantity > 1) {\n        state.favorites[itemIndex].cartQuantity -= 1;\n        toast.info(\"Decreased product quantity\", {\n          position: \"bottom-left\"\n        });\n      } else if (state.favorites[itemIndex].cartQuantity === 1) {\n        const nextFavorites = state.favorites.filter(item => item.id !== action.payload.id);\n        state.favorites = nextFavorites;\n        toast.error(\"Product removed from favorites\", {\n          position: \"bottom-left\"\n        });\n      }\n\n      localStorage.setItem(\"favorites\", JSON.stringify(state.favorites));\n    },\n\n    removeFromFavorites(state, action) {\n      const nextFavorites = state.favorites.filter(item => item.id !== action.payload.id);\n      state.favorites = nextFavorites;\n      toast.error(\"Product removed from favorites\", {\n        position: \"bottom-left\"\n      });\n      localStorage.setItem(\"favorites\", JSON.stringify(state.favorites));\n    }\n\n  }\n});\nexport const {\n  addToFavorites,\n  decreaseFavorites,\n  removeFromFavorites\n} = favoritesSlice.actions;\nconst rootReducer = combineReducers({\n  favorites: favoritesSlice.reducer // Other reducers can be combined here\n\n});\nexport default rootReducer;","map":{"version":3,"sources":["/Users/mbp15inch/Desktop/complete-shopping-cart-main/front/src/slices/favoritesSlice.js"],"names":["createSlice","combineReducers","toast","favoritesSlice","name","initialState","favorites","reducers","addToFavorites","state","action","tempProductItem","payload","cartQuantity","push","success","position","localStorage","setItem","JSON","stringify","decreaseFavorites","itemIndex","findIndex","item","id","info","nextFavorites","filter","error","removeFromFavorites","actions","rootReducer","reducer"],"mappings":"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","sourcesContent":["// import { createSlice, combineReducers } from \"@reduxjs/toolkit\";\n// import toast from \"react-toastify\";\n// const favoritesSlice = createSlice({\n//   name: \"favorites\",\n//   initialState: {\n//     favorites: [],\n//   },\n//   reducers: {\n//     addToFavorites(state, action) {\n//       const tempProductItem = { ...action.payload, cartQuantity: 1 };\n//       state.favorites.push(tempProductItem);\n//       toast.success(\"Product added to favorites\", {\n//         position: \"bottom-left\",\n//       });\n//       localStorage.setItem(\"favorites\", JSON.stringify(state.favorites));\n//     },\n//     decreaseFavorites(state, action) {\n//       const itemIndex = state.favorites.findIndex(\n//         (item) => item.id === action.payload.id\n//       );\n//       if (state.favorites[itemIndex].cartQuantity > 1) {\n//         state.favorites[itemIndex].cartQuantity -= 1;\n//         toast.info(\"Decreased product quantity\", {\n//           position: \"bottom-left\",\n//         });\n//       } else if (state.favorites[itemIndex].cartQuantity === 1) {\n//         const nextFavorites = state.favorites.filter(\n//           (item) => item.id !== action.payload.id\n//         );\n//         state.favorites = nextFavorites;\n//         toast.error(\"Product removed from favorites\", {\n//           position: \"bottom-left\",\n//         });\n//       }\n//       localStorage.setItem(\"favorites\", JSON.stringify(state.favorites));\n//     },\n//     removeFromFavorites(state, action) {\n//       const itemIndex = state.favorites.findIndex(\n//         (item) => item.id === action.payload.id\n//       );\n//       if (itemIndex !== -1) {\n//         const nextFavorites = state.favorites.filter(\n//           (item) => item.id !== action.payload.id\n//         );\n//         state.favorites = nextFavorites;\n//         toast.error(\"Product removed from favorites\")\n\nimport { createSlice, combineReducers } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\"; // Make sure you're importing toast correctly\nimport \"react-toastify/dist/ReactToastify.css\"; // Import the toast styles if you haven't\n\nconst favoritesSlice = createSlice({\n  name: \"favorites\",\n  initialState: {\n    favorites: [],\n  },\n  reducers: {\n    addToFavorites(state, action) {\n      const tempProductItem = { ...action.payload, cartQuantity: 1 };\n      state.favorites.push(tempProductItem);\n      toast.success(\"Product added to favorites\", {\n        position: \"bottom-left\",\n      });\n      localStorage.setItem(\"favorites\", JSON.stringify(state.favorites));\n    },\n    decreaseFavorites(state, action) {\n      const itemIndex = state.favorites.findIndex(\n        (item) => item.id === action.payload.id\n      );\n      if (state.favorites[itemIndex].cartQuantity > 1) {\n        state.favorites[itemIndex].cartQuantity -= 1;\n        toast.info(\"Decreased product quantity\", {\n          position: \"bottom-left\",\n        });\n      } else if (state.favorites[itemIndex].cartQuantity === 1) {\n        const nextFavorites = state.favorites.filter(\n          (item) => item.id !== action.payload.id\n        );\n        state.favorites = nextFavorites;\n        toast.error(\"Product removed from favorites\", {\n          position: \"bottom-left\",\n        });\n      }\n      localStorage.setItem(\"favorites\", JSON.stringify(state.favorites));\n    },\n    removeFromFavorites(state, action) {\n      const nextFavorites = state.favorites.filter(\n        (item) => item.id !== action.payload.id\n      );\n      state.favorites = nextFavorites;\n      toast.error(\"Product removed from favorites\", {\n        position: \"bottom-left\",\n      });\n      localStorage.setItem(\"favorites\", JSON.stringify(state.favorites));\n    },\n  },\n});\n\nexport const { addToFavorites, decreaseFavorites, removeFromFavorites } =\n  favoritesSlice.actions;\n\nconst rootReducer = combineReducers({\n  favorites: favoritesSlice.reducer,\n  // Other reducers can be combined here\n});\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}